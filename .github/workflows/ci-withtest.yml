# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout v2
      uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Docker Build
      run:  docker build -t lvthillo/python-flask-docker .
    - name: Docker Run
      run:  docker run --name my-container -d -p 8080:8080 lvthillo/python-flask-docker
    #- name: Create Shared Dir
    #  run: |
    #    sudo mkdir -p ~/shared_dir
    #    sudo touch ~/shared_dir/ipadress.txt
    #    sudo chmod +wr ~/shared_dir/ipadress.txt
    - id: step1
      run: echo "::set-output name=test::docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' my-container"
    #- name: Docker Inspect
    #  run: sudo docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' my-container | tee ~/shared_dir/ipadress.txt
    #- uses: actions/upload-artifact@master
    #  with:
    #    name: my-artifact
    #    path: /shared_dir
    - name: Test with pytest
      run: |
        pip install pytest
        export PYTHONPATH=src
        pytest

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/download-artifact@master
      with:
        name: my-artifact
        path: /shared_dir
    - name: Print output
      run:  echo ${{needs.build.outputs.output1}}    
    - run: cat /shared_dir/ipadress.txt
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test with pytest
      run: |
        pip install pytest
        export PYTHONPATH=src
        pytest
